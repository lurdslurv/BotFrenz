{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardArray","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredBots","filter","toLowerCase","includes","length","href","rel","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,6BAAwBH,EAAxB,cACpB,gCACI,6BAAKF,IACL,4BAAIC,WCaLK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAChC,OACI,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAOjB,OACI,8BACKH,KCFEI,EAZG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACA,8BACI,uBAAOX,UAAW,2CAClBY,KAAM,SACNC,YAAY,iBACZC,SAAUH,OCGHI,EATA,SAACC,GACZ,OACI,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACKJ,EAAMK,YCwDJC,G,wDAnDX,aAAe,IAAD,8BACV,gBAaRC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAbtC,EAAKC,MAAQ,CACTxB,OAAQ,GACRM,YAAa,IAJP,E,qDAQlB,WAAqB,IAAD,OAChBmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACrB,OAAQ6B,S,oBAStC,WACI,MAAgCC,KAAKN,MAA7BxB,EAAR,EAAQA,OAAQM,EAAhB,EAAgBA,YACVyB,EAAe/B,EAAOgC,QAAO,SAAAhC,GAC/B,OAAOA,EAAOP,KAAKwC,cAAcC,SAAS5B,EAAY2B,kBAE1D,OAAsB,IAAlBjC,EAAOmC,OACA,oBAAIvC,UAAU,cAAd,0CAGH,sBAAKA,UAAW,KAAhB,UACI,oBAAIA,UAAW,uBAAf,uBACA,qBAAKA,UAAW,GAAhB,SACA,oBACIA,UAAU,cACVwC,KAAK,+BACLd,OAAQ,SACRe,IAAI,aAJR,UAKI,2FALJ,SAOA,cAAC,EAAD,CAAW9B,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUnB,OAAQ+B,a,GA1CxBO,cCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f4611cb7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robot' src={`https:robohash.org/${id}?100x100`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardArray = robots.map((user, i) => {\r\n        return (\r\n            <Card\r\n                key={i}\r\n                id={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email}\r\n                />\r\n        );\r\n    })\r\n    return (\r\n        <div>\r\n            {cardArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return(\r\n    <div>\r\n        <input className ='tc i f4 pa2 ba b--green bg-lightest-blue'\r\n        type= 'search'\r\n        placeholder='Search Bots...'\r\n        onChange={searchChange}\r\n        />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","// import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style = {{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\n// import ErrorBoundary from '../Components/ErrorBoundary';\r\n// import { robots } from './robots';\r\nimport './App.css'\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\ncomponentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response=> response.json())     \r\n    .then(users => this.setState({robots: users}));\r\n}\r\n\r\nonSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n}\r\n\r\n// ({this.setState({ searchField: event.target.value})\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredBots = robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        if (robots.length === 0) {\r\n            return <h1 className='tc white f1'>Please Wait While Loading...</h1>\r\n        } else {\r\n            return (\r\n                <div className ='tc'>\r\n                    <h1 className ='mb1 f1 lightest-blue'>RoboFrenz</h1>\r\n                    <div className =''>\r\n                    <a\r\n                        className='light-green'\r\n                        href=\"https://github.com/lurdslurv\"\r\n                        target =\"_blank\"\r\n                        rel='noreferrer'>\r\n                        <h3>Made with and by LurvðŸ˜˜ðŸ˜˜ðŸ˜˜</h3> </a>\r\n                    </div>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots={filteredBots}/>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n     <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}